{"version":3,"sources":["components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/quotes/QuoteList.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/UI/LoadingSpinner.module.css","components/comments/Comments.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/layout/Layout.module.css","components/comments/Comments.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","NewCommentForm","props","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","text","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","onAddedCommentHandler","length","onClick","QuoteItem","author","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","pathname","list","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","MainNavigation","header","logo","nav","activeClassName","active","Layout","Fragment","main","children","NewQuote","React","lazy","QuoteDetail","NotFound","App","fallback","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d170e6a7.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-mpa-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__EstmA\",\"logo\":\"MainNavigation_logo__3dZ1l\",\"nav\":\"MainNavigation_nav__1m1oI\",\"active\":\"MainNavigation_active__2u9Ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__18rSj\",\"loading\":\"NewCommentForm_loading__1dqR1\",\"control\":\"NewCommentForm_control__2EOyh\",\"actions\":\"NewCommentForm_actions__tD2gm\"};","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http'\nimport { addComment} from '../../lib/api'\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const {onAddedComment} = props;\n\n  useEffect(() => {\n    if(status === 'completed' && !error) {\n      onAddedComment();\n    }\n  },[status, error, onAddedComment])//effect triggers whenever our status changes\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    \n    const enteredText = commentTextRef.current.value\n\n    sendRequest({commentData:{text:enteredText}, quoteId:props.quoteId})//go to comments.js n pass this quiteId in NweComment form\n  };//my comment will just have text \n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (<div className='centered'><LoadingSpinner/></div>)}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1r74J\",\"sorting\":\"QuoteList_sorting__2l60H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2Gg95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__pjmDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2TWru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__tx-DB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__AmR44\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3S2So\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__FmtAz\"};","import { useState, useEffect, useCallback} from \"react\";\nimport { useParams } from \"react-router\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\"; //custom hook\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId); //the effect fun should send a request to load our comments\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const onAddedCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n  },[sendRequest, quoteId]);//this fun will recreated if sendRequest changes or quoteId changes\n  //Wrapping this with useCallback is imp bcoz otherwise it will create infinite loop\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No Comments Were Added</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={onAddedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`} >\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\n//useHistory:for change n manage URL ,useLocation:location about currently loading page\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n const queryParams = new URLSearchParams(location.search);\n //URLSearchParams is a builtin constructor function\n const isSortingAscending = queryParams.get('sort') === 'asc';\n const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () =>{\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    })//sort key name is uto you\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}> Sort {isSortingAscending ? 'Descending': 'Ascending'}</button>\n        </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport {Link} from 'react-router-dom'\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n  ////path new-quote is defined in App.js\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react'//to send request when the component AllQuotes loads\r\nimport QuoteList from '../components/quotes/QuoteList'\r\nimport useHttp from '../hooks/use-http'\r\nimport {getAllQuotes} from '../lib/api'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\r\n\r\nconst AllQuotes = () => {\r\n    const { sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\r\n    useEffect (() => {sendRequest()}, [sendRequest]);\r\n\r\n    if (status === \"pending\") {\r\n      return (\r\n        <div className=\"centered\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      );\r\n    }\r\n    if(error) {\r\n        return <p className='centerd focused'>{error}</p>;\r\n    }\r\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes === 0)){\r\n        return <NoQuotesFound/>\r\n    }\r\n    return <QuoteList quotes = {loadedQuotes}/>\r\n}\r\nexport default AllQuotes\r\n//QuoteList component wants quotes prop\r\n","import React from \"react\";\r\nimport classes from \"./MainNavigation.module.css\";\r\nimport { NavLink } from \"react-router-dom\"; //NavLink acts as link in which style of css can be adeed\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>great quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\r\n              Add Quotes\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from 'react'\r\nimport classes from './Layout.module.css'\r\nimport MainNavigation from './MainNavigation'\r\n\r\nconst Layout = (props) => {\r\n    return <React.Fragment>\r\n          <MainNavigation/>\r\n          <main className={classes.main}>{props.children}</main>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default Layout\r\n//we can create wrapper component using props n props.children\r\n// here we wil make Layout as our wrapper in App.js around swich\r\n","import React, {Suspense} from 'react';\nimport { Route, Switch, Redirect } from \"react-router\";\nimport CommentsList from \"./components/comments/CommentsList\";\nimport NewCommentForm from \"./components/comments/NewCommentForm\";\nimport Comments from \"./components/comments/Comments\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from './components/UI/LoadingSpinner';\n//lazy loading://whenOnly NewQuote needed react'll execute this,same with other components\nconst NewQuote = React.lazy(() => import('./pages/NewQuote'));//import NewQuote from './pages/NewQuote';\nconst QuoteDetail = React.lazy(() => import('./pages/QuoteDetail'));//import QuoteDetail from './pages/QuoteDetail';\nconst NotFound = React.lazy(() => import('./pages/NotFound'));//import NotFound from './pages/NotFound';\n//in React Router6 switch doesnt exist anymore so we need to replce switch with Routes\n//to install router6 go to terminal n type npm install react-router-dom@6 or latest\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense fallback={<div className='centered'><LoadingSpinner/></div>}>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='/quotes' />\n        </Route>\n        <Route path='/quotes' exact>\n          <AllQuotes/>\n        </Route>\n        <Route path='/quotes/:quoteId'>\n          <QuoteDetail/>\n        </Route>\n        <Route path='/new-quote'>\n          <NewQuote/>\n        </Route>\n        <Route path='*'>\n          <NotFound/>\n        </Route>\n      </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n/*now go to index.js there import { BrowserRouter } from 'react-router-dom'; \nn wrap your app component with <BrowserRouter> */\n\n/*<Route path='*'></Route> this signals react rounter any path should match this route so this page will\nmatch if no other route matches */\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}