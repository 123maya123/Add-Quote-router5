{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","QuoteDetail","match","useRouteMatch","quoteId","useParams","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner","Fragment","path","exact","to","url","Comments"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,kC,yGCUXC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAA3B,UACE,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,a,uBCiDVC,UA/CK,WAClB,IAAMC,EAAQC,cAGPC,EAFQC,cAERD,QAEP,EAAuDE,YAAQC,KAAgB,GAAzEC,EAAN,EAAMA,YAAaC,EAAnB,EAAmBA,OAAcC,EAAjC,EAA2BC,KAAmBC,EAA9C,EAA8CA,MAO9C,OAJAC,qBAAU,WACRL,EAAYJ,KACZ,CAACI,EAAYJ,IAED,YAAXK,EAEE,qBAAKb,UAAU,WAAf,SACE,cAACkB,EAAA,EAAD,MAIJF,EACM,mBAAGhB,UAAU,WAAb,SAAyBgB,IAG7BF,EAAYX,KAKf,eAAC,IAAMgB,SAAP,WACE,cAAC,EAAD,CAAkBhB,KAAMW,EAAYX,KAAMC,OAAQU,EAAYV,SAC9D,cAAC,IAAD,CAAOgB,KAAMd,EAAMc,KAAMC,OAAK,EAA9B,SACE,qBAAKrB,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYsB,GAAE,UAAKhB,EAAMiB,IAAX,aAA9B,+BAKJ,eAAC,IAAD,CAAOH,KAAI,UAAKd,EAAMc,KAAX,aAAX,UACG,IACD,cAACI,EAAA,EAAD,IAAa,UAfV","file":"static/js/4.a99e29cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1td4W\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport React, { useEffect } from 'react'\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const {quoteId} = params;\r\n\r\n  const{sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\r\n  //passing pointer in useHttp n starting in loading mode  by setting true\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  },[sendRequest,quoteId]);\r\n\r\n  if(status === 'pending'){\r\n    return(\r\n       <div className='centered'>\r\n         <LoadingSpinner/>\r\n       </div>\r\n    )\r\n  }\r\n  if(error){\r\n    return <p className='centered'>{error}</p>;\r\n  }\r\n  \r\n  if (!loadedQuote.text) {\r\n    return <p>No Quote Found</p>;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        {\" \"}\r\n        <Comments />{\" \"}\r\n      </Route>\r\n      {/* <Route path={`/quotes/:quoteId/comments`}> <Comments/> </Route> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n//quoteId becoz in app.js we gave our identifier the name quoteId that canbe asses here through params\r\n\r\n//HighlightedQuote wants 2 parameters i.e. text n author\r\n\r\n//css class centered n btn--flat are globally defined in index.js\r\n"],"sourceRoot":""}